SET SQL DIALECT 3;

/* CREATE DATABASE 'D:\Projects\NoMarkManager\debug\GOODS.GDB' PAGE_SIZE 4096

 DEFAULT CHARACTER SET GB_2312 */
/* Domain definitions */
CREATE DOMAIN "D_MONEY" AS NUMERIC(18, 2);

/* Table: TMP_CHECK_GOODS, Owner: ONES */

CREATE TABLE "TMP_CHECK_GOODS" 
(
  "GOODIDX"	INTEGER NOT NULL,
  "NUMBER"	DECIMAL(18,3) DEFAULT 0,
  "CHECKED"	INTEGER DEFAULT 0,
  "REASON"	VARCHAR(255) CHARACTER SET GB_2312,
  "DESP"	VARCHAR(1024) CHARACTER SET GB_2312,
 PRIMARY KEY ("GOODIDX")
);

/* Table: T_ADMIN, Owner: ONES */

CREATE TABLE "T_ADMIN" 
(
  "IDX"	INTEGER NOT NULL,
  "NAME"	VARCHAR(64) CHARACTER SET GB_2312,
  "PWD"	VARCHAR(255) CHARACTER SET GB_2312,
  "ULEVEL"	SMALLINT,
  "DESP"	VARCHAR(255) CHARACTER SET GB_2312,
CONSTRAINT "PK_T_ADMIN" PRIMARY KEY ("IDX")
);

/* Table: T_AUDIT_GOODS, Owner: ONES */

CREATE TABLE "T_AUDIT_GOODS" 
(
  "AUDITTIME"	TIMESTAMP NOT NULL,
  "NAME1"	VARCHAR(255) CHARACTER SET GB_2312,
  "NAME2"	VARCHAR(255) CHARACTER SET GB_2312,
  "COST1"	"D_MONEY" NOT NULL,
  "COST2"	"D_MONEY" NOT NULL,
  "GOODNUMBER1"	DECIMAL(18,3),
  "GOODNUMBER2"	DECIMAL(18,3),
  "STORAGENUMBER1"	DECIMAL(18,3),
  "STORAGENUMBER2"	DECIMAL(18,3),
 PRIMARY KEY ("AUDITTIME")
);

/* Table: T_CHECK_GOODS, Owner: ONES */

CREATE TABLE "T_CHECK_GOODS" 
(
  "IDX"	INTEGER NOT NULL,
  "CHECKIDX"	INTEGER NOT NULL,
  "GOODIDX"	INTEGER NOT NULL,
  "DIFFERENCE"	INTEGER NOT NULL,
  "RESPONSIBLEPEOPLE"	VARCHAR(255) CHARACTER SET GB_2312 DEFAULT 'NOW',
  "ERRORSTEP"	VARCHAR(255) CHARACTER SET GB_2312,
  "REASON"	VARCHAR(255) CHARACTER SET GB_2312,
  "DESP"	VARCHAR(1024) CHARACTER SET GB_2312,
  "STOCKNUMBER"	DECIMAL(18,3),
  "NUMBER"	DECIMAL(18,3),
CONSTRAINT "PK_T_CHECK_GOODS" PRIMARY KEY ("IDX")
);

/* Table: T_CHECK_LIST, Owner: ONES */

CREATE TABLE "T_CHECK_LIST" 
(
  "IDX"	INTEGER NOT NULL,
  "CHECKDATE"	DATE DEFAULT current_date,
  "DESP"	VARCHAR(255) CHARACTER SET GB_2312,
  "TOTALDIFF"	"D_MONEY",
CONSTRAINT "PK_T_CHECK" PRIMARY KEY ("IDX")
);

/* Table: T_CONST, Owner: ONES */

CREATE TABLE "T_CONST" 
(
  "IDX"	INTEGER NOT NULL,
  "VAL"	VARCHAR(255) CHARACTER SET GB_2312,
CONSTRAINT "PK_T_CONST" PRIMARY KEY ("IDX")
);

/* Table: T_DUTY, Owner: ONES */

CREATE TABLE "T_DUTY" 
(
  "IDX"	INTEGER NOT NULL,
  "USERNAME"	VARCHAR(64) CHARACTER SET GB_2312,
  "DUTYDATE"	DATE,
  "LOGINTIME"	TIME,
  "LOGOUTTIME"	TIME,
CONSTRAINT "PK_T_DUTY" PRIMARY KEY ("IDX")
);

/* Table: T_GOODS, Owner: ONES */

CREATE TABLE "T_GOODS" 
(
  "IDX"	INTEGER NOT NULL,
  "TYPEIDX"	INTEGER DEFAULT 0,
  "BARCODE"	VARCHAR(13) CHARACTER SET GB_2312 NOT NULL,
  "NAME"	VARCHAR(255) CHARACTER SET GB_2312 NOT NULL,
  "GOODCODE"	VARCHAR(255) CHARACTER SET GB_2312 NOT NULL,
  "COST"	"D_MONEY" NOT NULL,
  "GOODNUMBER"	DECIMAL(18,3) DEFAULT 1 NOT NULL,
  "STORAGENUMBER"	DECIMAL(18,3),
  "LABELPRICE"	"D_MONEY",
  "LOWESTPRICE"	"D_MONEY",
  "LABELPRINTED"	SMALLINT DEFAULT false,
  "DESP"	VARCHAR(1024) CHARACTER SET GB_2312,
  "IMAGE"	BLOB SUB_TYPE 0 SEGMENT SIZE 8192 DEFAULT NULL,
CONSTRAINT "PK_T_GOODS" PRIMARY KEY ("IDX")
);

/* Table: T_GOODS_OLD, Owner: ONES */

CREATE TABLE "T_GOODS_OLD" 
(
  "IDX"	INTEGER NOT NULL,
  "TYPEIDX"	INTEGER DEFAULT 0,
  "BARCODE"	VARCHAR(13) CHARACTER SET GB_2312 NOT NULL,
  "NAME"	VARCHAR(255) CHARACTER SET GB_2312 NOT NULL,
  "GOODCODE"	VARCHAR(255) CHARACTER SET GB_2312 NOT NULL,
  "COST"	"D_MONEY" NOT NULL,
  "GOODNUMBER"	DECIMAL(18,3) DEFAULT 1 NOT NULL,
  "STORAGENUMBER"	DECIMAL(18,3),
  "LABELPRICE"	"D_MONEY",
  "LOWESTPRICE"	"D_MONEY",
  "LABELPRINTED"	SMALLINT DEFAULT false,
  "DESP"	VARCHAR(1024) CHARACTER SET GB_2312,
  "IMAGE"	BLOB SUB_TYPE 0 SEGMENT SIZE 8192 DEFAULT NULL,
CONSTRAINT "PK_T_GOODS_OLD" PRIMARY KEY ("IDX")
);

/* Table: T_GOODTYPE, Owner: ONES */

CREATE TABLE "T_GOODTYPE" 
(
  "IDX"	INTEGER NOT NULL,
  "PID"	INTEGER DEFAULT 0 NOT NULL,
  "NAME"	VARCHAR(255) CHARACTER SET GB_2312 NOT NULL,
CONSTRAINT "PK_T_GOODTYPE" PRIMARY KEY ("IDX")
);

/* Table: T_INCOMING_GOODS, Owner: ONES */

CREATE TABLE "T_INCOMING_GOODS" 
(
  "IDX"	INTEGER NOT NULL,
  "GOODIDX"	INTEGER NOT NULL,
  "LISTIDX"	INTEGER NOT NULL,
  "INCOMINGTIME"	TIMESTAMP DEFAULT 'NOW',
CONSTRAINT "PK_T_INCOMING" PRIMARY KEY ("IDX")
);

/* Table: T_INCOMING_LIST, Owner: ONES */

CREATE TABLE "T_INCOMING_LIST" 
(
  "IDX"	INTEGER NOT NULL,
  "INCOMINGDATE"	DATE DEFAULT CURRENT_DATE,
  "NAME"	VARCHAR(255) CHARACTER SET GB_2312,
  "TOTALCOST"	"D_MONEY",
  "TOTALNUMBER"	DECIMAL(18,3),
  "DESP"	VARCHAR(1024) CHARACTER SET GB_2312,
CONSTRAINT "PK_T_ORDERLIST" PRIMARY KEY ("IDX")
);

/* Table: T_INOUT_ITEMS, Owner: ONES */

CREATE TABLE "T_INOUT_ITEMS" 
(
  "IDX"	INTEGER NOT NULL,
  "ORDERLISTIDX"	INTEGER NOT NULL,
  "INOUT"	SMALLINT NOT NULL,
  "NAME"	VARCHAR(255) CHARACTER SET GB_2312,
  "COST"	"D_MONEY"  DEFAULT 0,
CONSTRAINT "PK_T_INOUT_ITEMS" PRIMARY KEY ("IDX")
);

/* Table: T_ORDER_GOODS, Owner: ONES */

CREATE TABLE "T_ORDER_GOODS" 
(
  "IDX"	INTEGER NOT NULL,
  "ORDERLISTIDX"	INTEGER NOT NULL,
  "GOODIDX"	INTEGER NOT NULL,
  "COUNTS"	INTEGER DEFAULT 1,
  "PRICE"	"D_MONEY" NOT NULL,
  "COST"	"D_MONEY",
  "PROFIT"	"D_MONEY",
  "SELLTIME"	TIMESTAMP DEFAULT 'NOW',
  "CANCELDATE"	DATE DEFAULT NULL,
CONSTRAINT "PK_T_ORDER" PRIMARY KEY ("IDX")
);

/* Table: T_ORDER_LIST, Owner: ONES */

CREATE TABLE "T_ORDER_LIST" 
(
  "IDX"	INTEGER NOT NULL,
  "ORDERDATE"	DATE DEFAULT current_date NOT NULL,
  "TOTALCHANGE"	"D_MONEY"  DEFAULT 0,
  "TOTALCASH"	"D_MONEY"  DEFAULT 0,
  "TOTALCOST"	"D_MONEY"  DEFAULT 0,
  "TOTALPRICE"	"D_MONEY"  DEFAULT 0,
  "TOTALPROFIT"	"D_MONEY"  DEFAULT 0,
  "TOTALSELLNUM"	DECIMAL(18,3) DEFAULT 0,
  "TOTALCANCELNUM"	DECIMAL(18,3) DEFAULT 0,
  "DESP"	VARCHAR(255) CHARACTER SET GB_2312,
  "TOTALINCOME"	"D_MONEY"  DEFAULT 0,
  "TOTALEXPENSES"	"D_MONEY"  DEFAULT 0,
  "BANKSAVE"	"D_MONEY"  DEFAULT 0,
CONSTRAINT "PK_T_ORDER_LIST" PRIMARY KEY ("IDX")
);

/* Table: T_USER, Owner: ONES */

CREATE TABLE "T_USER" 
(
  "IDX"	INTEGER NOT NULL,
  "SERIAL"	VARCHAR(32) CHARACTER SET GB_2312,
  "NAME"	VARCHAR(64) CHARACTER SET GB_2312,
  "DESP"	VARCHAR(255) CHARACTER SET GB_2312,
CONSTRAINT "PK_T_USER" PRIMARY KEY ("IDX")
);

/*  Index definitions for all user tables */

CREATE UNIQUE INDEX "IDX_BARCODE" ON "T_GOODS"("BARCODE");
CREATE INDEX "IDX_GOOD_TYPE_PID" ON "T_GOODTYPE"("PID");
CREATE INDEX "IDX_CANCELTIME" ON "T_ORDER_GOODS"("CANCELDATE");
CREATE INDEX "IDX_SELLTIME" ON "T_ORDER_GOODS"("SELLTIME");
CREATE UNIQUE INDEX "IDX_ORDER_DATE" ON "T_ORDER_LIST"("ORDERDATE");
CREATE UNIQUE INDEX "IDX_T_SERIAL" ON "T_USER"("SERIAL");
ALTER TABLE "T_CHECK_GOODS" ADD CONSTRAINT "FK_T_CHECK_CHECK" FOREIGN KEY ("CHECKIDX") REFERENCES "T_CHECK_LIST" ("IDX") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "T_CHECK_GOODS" ADD CONSTRAINT "FK_T_CHECK_GOODS" FOREIGN KEY ("GOODIDX") REFERENCES "T_GOODS" ("IDX") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "T_INCOMING_GOODS" ADD CONSTRAINT "FK_T_INCOMING_GOODS" FOREIGN KEY ("GOODIDX") REFERENCES "T_GOODS" ("IDX") ON UPDATE CASCADE;
ALTER TABLE "T_INCOMING_GOODS" ADD CONSTRAINT "FK_T_INCOMING_LIST" FOREIGN KEY ("LISTIDX") REFERENCES "T_INCOMING_LIST" ("IDX") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "T_INOUT_ITEMS" ADD CONSTRAINT "FK_INOUTITEM_ORDERLIST" FOREIGN KEY ("ORDERLISTIDX") REFERENCES "T_ORDER_LIST" ("IDX") ON UPDATE CASCADE;
ALTER TABLE "T_ORDER_GOODS" ADD CONSTRAINT "FK_T_ORDER_GOODS" FOREIGN KEY ("GOODIDX") REFERENCES "T_GOODS" ("IDX") ON UPDATE CASCADE ON DELETE SET DEFAULT;
ALTER TABLE "T_ORDER_GOODS" ADD CONSTRAINT "FK_T_ORDER_ORDERLIST" FOREIGN KEY ("ORDERLISTIDX") REFERENCES "T_ORDER_LIST" ("IDX");

CREATE GENERATOR "T_ADMIN_GEN";
CREATE GENERATOR "T_CHECK_GOODS_GEN";
CREATE GENERATOR "T_CHECK_LIST_GEN";
CREATE GENERATOR "T_DUTY_GEN";
CREATE GENERATOR "T_GOODS_GEN";
CREATE GENERATOR "T_GOODTYPE_GEN";
CREATE GENERATOR "T_INCOMING_GOODS_GEN";
CREATE GENERATOR "T_INCOMING_LIST_GEN";
CREATE GENERATOR "T_INOUT_ITEMS_GEN";
CREATE GENERATOR "T_ORDER_GOODS_GEN";
CREATE GENERATOR "T_ORDER_LIST_GEN";
CREATE GENERATOR "T_USER_GEN";

/* View: V_GOODS, Owner: ONES */

CREATE VIEW "V_GOODS" (
  "IDX", 
  "TYPEIDX", 
  "BARCODE", 
  "NAME", 
  "GOODCODE", 
  "COST", 
  "GOODNUMBER", 
  "STORAGENUMBER", 
  "LABELPRICE", 
  "LOWESTPRICE", 
  "LABELPRINTED", 
  "DESP", 
  "IMAGE"
) AS

select * from t_goods union
select * from t_goods_old
;

/* View: V_SELL_LIST, Owner: ONES */

CREATE VIEW "V_SELL_LIST" (
  "YEARS", 
  "MONTHS", 
  "TOTALCOST", 
  "TOTALPRICE", 
  "TOTALPROFIT"
) AS
         select extract(year from orderdate)as y, extract(month from orderdate) as m,         sum(totalcost) as tc, sum(totalprice) as tp, sum(totalprofit) as tf from t_order_list group by orderdate
;

/* Triggers only will work for SQL triggers */

CREATE TRIGGER "T_ADMIN_AUTOID" FOR "T_ADMIN" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_admin_gen, 1 );
end
 ;

CREATE TRIGGER "T_CHECK_GOODS_AUTOID" FOR "T_CHECK_GOODS" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_check_goods_gen, 1 );
end
 ;

CREATE TRIGGER "T_CHECK_LIST_AUTOID" FOR "T_CHECK_LIST" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_check_list_gen, 1 );
end
 ;

CREATE TRIGGER "T_DUTY_AUTOID" FOR "T_DUTY" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_duty_gen, 1 );
end
 ;

CREATE TRIGGER "T_GOODS_AUTOID" FOR "T_GOODS" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_goods_gen, 1 );
end
 ;

CREATE TRIGGER "T_GOODTYPE_AUTOID" FOR "T_GOODTYPE" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_goodtype_gen, 1 );
end
 ;

CREATE TRIGGER "T_INCOMING_GOODS_AUTOID" FOR "T_INCOMING_GOODS" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_incoming_goods_gen, 1 );
end
 ;

CREATE TRIGGER "T_INCOMING_LIST_AUTOID" FOR "T_INCOMING_LIST" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_incoming_list_gen, 1 );
end
 ;

CREATE TRIGGER "T_INOUT_ITEMS_AUTOID" FOR "T_INOUT_ITEMS" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_inout_items_gen, 1 );
end
 ;

CREATE TRIGGER "T_ORDER_GOODS_AUTOID" FOR "T_ORDER_GOODS" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_order_goods_gen, 1 );
end
 ;

CREATE TRIGGER "T_ORDER_LIST_AUTOID" FOR "T_ORDER_LIST" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_order_list_gen, 1 );
end
 ;

CREATE TRIGGER "T_USER_AUTOID" FOR "T_USER" 
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Auto increase index field: idx */
  if (new.idx is null) then
    new.idx = gen_id( t_user_gen, 1 );
end
 ;

COMMIT WORK ;

/* Grant Roles for this database */


/* Grant permissions for this database */
